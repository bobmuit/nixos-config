# Set the shell to use (default is sh)
set shell := ["bash", "-cu"]

# Local machine

deploy:
    nixos-rebuild switch --flake ~/nixos-config#nixos-dell --use-remote-sudo

deployhm: 
    home-manager switch --flake ~/nixos-config#bobmuit

debug:
    nixos-rebuild switch --flake ~/nixos-config#nixos-dell --use-remote-sudo --show-trace --verbose

build:
    nixos-rebuild build --flake ~/nixos-config#nixos-dell --use-remote-sudo

test:
    nixos-rebuild test --flake ~/nixos-config#nixos-dell --use-remote-sudo

update:
    nix flake update

clean:
    # remove all generations older than 7 days
    sudo nix profile wipe-history --profile /nix/var/nix/profiles/system  --older-than 7d

gc:
    # garbage collect all unused nix store entries
    sudo nix-collect-garbage --delete-old

# Remote machines
syno: 
    ssh bobmuit@192.168.1.180

PI_USER := "nixos"
PI_HOST := "192.168.1.63"
PI_TARGET_DIR := "/home/nixos/nixos-config-remote"
FLAKE_REF := "nixos-pi"

pi:
    ssh "{{PI_USER}}@{{PI_HOST}}"

syncpi:
    # Sync the nixos-config directory to the Pi
    echo "ðŸ”„ Syncing config to {{PI_HOST}}..."
    rsync -avz --delete --exclude=".git" "$HOME/nixos-config" "{{PI_USER}}@{{PI_HOST}}:{{PI_TARGET_DIR}}"

deploypi:
    # Trigger the rebuild remotely
    echo "Running nixos-rebuild switch on the Pi..."
    ssh "{{PI_USER}}@{{PI_HOST}}" "sudo nixos-rebuild switch --flake {{PI_TARGET_DIR}}#{{FLAKE_REF}}"

testpi:
    # Trigger the rebuild remotely
    echo "Running nixos-rebuild test on the Pi..."
    ssh "{{PI_USER}}@{{PI_HOST}}" "sudo nixos-rebuild test --flake {{PI_TARGET_DIR}}#{{FLAKE_REF}}"
